<?php

/**
 * @file
 * Implements some hooks to create admin interface for contact messages.
 */

/**
 * Implements hook_menu().
 */
function crm_message_ui_menu() {
  $items = array();

  $items['admin/crm/config/message'] = array(
    'title' => 'Message',
    'description' => 'Manage Message configuration',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('crm_message_ui_settings_form'),
    'access arguments' => array('crm administer'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'crm_message_ui.admin.inc',
  );

  foreach (crm_message_types() as $type => $bundle) {
    $type_arg = strtr($type, '_', '-');
    $items['admin/crm/config/message/' . $type_arg] = array(
      'title' => $bundle,
      'page callback' => 'drupal_get_form',
      'page arguments' => array('crm_message_ui_settings', $type),
      'access arguments' => array('crm administer'),
      'type' => MENU_NORMAL_ITEM,
    );
  }

  $items['admin/crm/message/%crm_message'] = array(
    'title callback' => 'crm_message_label',
    'title arguments' => array(3),
    'page callback' => 'crm_message_view',
    'page arguments' => array(3),
    'access callback' => 'crm_message_access',
    'access arguments' => array('view', 3),
    'type' => MENU_CALLBACK,
    'file' => 'includes/crm_message_ui.list.inc',
  );

  $items['admin/crm/message/%crm_message/view'] = array(
    'title' => 'View',
    'page callback' => 'crm_message_view',
    'page arguments' => array(3),
    'access callback' => 'crm_message_access',
    'access arguments' => array('view', 3),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    'file' => 'includes/crm_message_ui.list.inc',
    'weight' => -2,
  );

  $items['admin/crm/message/%crm_message/edit'] = array(
    'title' => 'Edit',
    'page callback' => 'crm_message_ui_form_wrapper',
    'page arguments' => array(3),
    'access callback' => 'crm_message_access',
    'access arguments' => array('update', 3),
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    'file' => 'includes/crm_message_ui.form.inc',
    'weight' => -1,
  );

  $items['admin/crm/message/%crm_message/delete'] = array(
    'title' => 'Delete',
    'page callback' => 'crm_message_ui_form_wrapper',
    'page arguments' => array(3, TRUE),
    'access callback' => 'crm_message_access',
    'access arguments' => array('delete', 3),
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    'file' => 'includes/crm_message_ui.form.inc',
    'weight' => 99,
  );

  $items['admin/crm/message/%crm_message/send'] = array(
    'title' => 'Send',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('crm_message_ui_send', 3),
    'access callback' => 'crm_message_access',
    'access arguments' => array('send', 3),
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    'file' => 'includes/crm_message_ui.form.inc',
    'weight' => 99,
  );

  $items['admin/crm/message/%crm_message/resend'] = array(
    'title' => 'Resend',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('crm_message_ui_resend', 3),
    'access callback' => 'crm_message_access',
    'access arguments' => array('resend', 3),
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    'file' => 'includes/crm_message_ui.form.inc',
    'weight' => 99,
  );

  $items['admin/crm/message/%crm_message/cancel'] = array(
    'title' => 'Cancel',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('crm_message_ui_cancel', 3),
    'access callback' => 'crm_message_access',
    'access arguments' => array('cancel', 3),
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    'file' => 'includes/crm_message_ui.form.inc',
    'weight' => 99,
  );

  $items['admin/crm/message/add'] = array(
    'title' => 'Add message',
    'page callback' => 'crm_message_ui_add',
    'page arguments' => array(),
    'access callback' => 'crm_message_access',
    'access arguments' => array('create'),
    'type' => MENU_LOCAL_ACTION,
    'file' => 'includes/crm_message_ui.list.inc',
  );

  $items['admin/crm/message/add/%'] = array(
    'title' => 'New message',
    'page callback' => 'crm_message_ui_form_wrapper',
    'page arguments' => array(NULL, FALSE, 4),
    'access callback' => 'crm_message_access',
    'access arguments' => array('create'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/crm_message_ui.form.inc',
  );

  $items['admin/crm/channel/%crm_channel/message/send'] = array(
    'title' => 'New message',
    'page callback' => 'crm_message_ui_send_channel_form_wrapper',
    'page arguments' => array(3),
    'access callback' => 'crm_message_ui_channel_access',
    'access arguments' => array('create', 3),
    'type' => MENU_LOCAL_ACTION,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    'file' => 'includes/crm_message_ui.form.inc',
  );

  if (module_exists('crm_contact')) {
    $items['admin/crm/contact/%crm_contact/send'] = array(
      'title' => 'New message',
      'page callback' => 'crm_message_ui_send_contact_form_wrapper',
      'page arguments' => array(3),
      'access callback' => 'crm_message_ui_contact_access',
      'access arguments' => array('create', 3),
      'type' => MENU_LOCAL_TASK,
      'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
      'file' => 'includes/crm_message_ui.form.inc',
    );
  }

  return $items;
}

/**
 * Implements hook_menu_local_tasks_alter().
 */
function crm_message_ui_menu_local_tasks_alter(&$data, $router_item, $root_path) {
  if ($root_path == 'admin/crm/message' && isset($data['actions']['output'][0]['#link']['localized_options'])) {
    $data['actions']['output'][0]['#link']['localized_options']['query'] = drupal_get_destination();
  }
}

/**
 * Implements hook_views_api().
 */
function crm_message_ui_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'crm_message_ui') . '/includes/views',
  );
}

/**
 * Settings form.
 */
function crm_message_ui_settings($form, &$form_state, $bundle) {
  return system_settings_form($form);
}

/**
 * Implements hook_entity_info_alter().
 */
function crm_message_ui_entity_info_alter(&$entity_info) {
  // Expose the admin UI for product fields.
  foreach ($entity_info['crm_message']['bundles'] as $type => &$bundle) {
    $bundle['admin'] = array(
      'path' => 'admin/crm/config/message/' . strtr($type, '_', '-'),
      'access arguments' => array('crm manage'),
    );
  }
}

/**
 * @param $channel
 */
function crm_message_ui_channel_access($op, $channel) {
  if (!isset($channel->type)) {
    return FALSE;
  }
  if (!_crm_message_channel_supported($channel->type)) {
    return FALSE;
  }
  return crm_message_access($op);
}

/**
 * Thresholds helper.
 */
function _crm_message_ui_threshold_option_list() {
  return array(
    1 => 1,
    2 => 2,
    3 => 3,
    4 => 4,
    5 => 5,
    6 => 6,
    7 => 7,
    8 => 8,
    9 => 9,
    10 => 10,
  );
}

if (module_exists('crm_contact')) {
  /**
   * @param $contact
   */
  function crm_message_ui_contact_access($op, $contact) {
    try {
      $wrapper = entity_metadata_wrapper('crm_contact', $contact);
      $channels = $wrapper->crm_channel->value();
      $channels = crm_channel_filter_inactive($channels);
      if (empty($channels)) {
        return FALSE;
      }
      return crm_message_access($op);
    }
    catch (Exception $e) {
      return FALSE;
    }
  }
}
